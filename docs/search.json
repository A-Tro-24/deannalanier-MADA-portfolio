[
  {
    "objectID": "tidytuesday_exercise.html",
    "href": "tidytuesday_exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Placeholder file for the future Tidy Tuesday exercise."
  },
  {
    "objectID": "visualization_exercise.html",
    "href": "visualization_exercise.html",
    "title": "Visualization Exercise",
    "section": "",
    "text": "Placeholder file for the future visualization exercise."
  },
  {
    "objectID": "coding_exercise.html",
    "href": "coding_exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "Placeholder file for the future R coding exercise.\n\n  #install and load required pakages\n#install.packages(\"dslabs\")   #install and load dslabs for gapminder dataset\n\nlibrary(dslabs)  #install and load dslabs for gapminder dataset\n\nlibrary(ggplot2)  #load for plotting\n\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\n\nlibrary(skimr) #for nice visualization of data \n\nlibrary(here) #to set paths\n\nhere() starts at /Users/deannalanier/Desktop/All_Classes_UGA/2023Spr_Classes/MADA/deannalanier-MADA-portfolio\n\nlibrary(broom) #for cleaning up output from lm()\n\n\n#load and view gapminder data set\n\nhelp(gapminder) #look at help file for gapminder data\n\nstr(gapminder) #get an overview of the data structure\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\nsummary(gapminder) #get a summary of the data\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\nclass(gapminder) #determine the type of object gapminer is \n\n[1] \"data.frame\"\n\n\n\n# Subset Africa data\n\n#save all data to \"data\"\ndata = gapminder\n\n# subset based on Continent == Africa\nafricaData = data[ which(data$continent==\"Africa\"), ]\n\n#Subset Africa infant mortality and life expectancy\ninfantM_LifeE = africaData[c(\"infant_mortality\", \"life_expectancy\")]\nstr(infantM_LifeE)\n\n'data.frame':   2907 obs. of  2 variables:\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(infantM_LifeE)\n\n infant_mortality life_expectancy\n Min.   : 11.40   Min.   :13.20  \n 1st Qu.: 62.20   1st Qu.:48.23  \n Median : 93.40   Median :53.98  \n Mean   : 95.12   Mean   :54.38  \n 3rd Qu.:124.70   3rd Qu.:60.10  \n Max.   :237.40   Max.   :77.60  \n NA's   :226                     \n\n#Subset Africa population and life expectancy\npop_LifeE = africaData[c(\"population\", \"life_expectancy\")]\nstr(pop_LifeE)\n\n'data.frame':   2907 obs. of  2 variables:\n $ population     : num  11124892 5270844 2431620 524029 4829291 ...\n $ life_expectancy: num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(pop_LifeE)\n\n   population        life_expectancy\n Min.   :    41538   Min.   :13.20  \n 1st Qu.:  1605232   1st Qu.:48.23  \n Median :  5570982   Median :53.98  \n Mean   : 12235961   Mean   :54.38  \n 3rd Qu.: 13888152   3rd Qu.:60.10  \n Max.   :182201962   Max.   :77.60  \n NA's   :51                         \n\n\n\n# Plot life expectancy as a function of infant mortality \n\nggplot(infantM_LifeE, aes(x=infant_mortality, y=life_expectancy)) + geom_point()\n\nWarning: Removed 226 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\nscatt = ggplot(pop_LifeE, aes(x=population, y=life_expectancy)) + geom_point() \nscatt\n\nWarning: Removed 51 rows containing missing values (`geom_point()`).\n\n\n\n\n#log transformation using scale_xx()\nscatt +scale_x_continuous(trans='log10')\n\nWarning: Removed 51 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n# determine the years with missing values for NA\ninfantNA  = (africaData[is.na(africaData$infant_mortality), ]  )\ntable(infantNA$year)\n\n\n1960 1961 1962 1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974 1975 \n  10   17   16   16   15   14   13   11   11    7    5    6    6    6    5    5 \n1976 1977 1978 1979 1980 1981 2016 \n   3    3    2    2    1    1   51 \n\n\n\n# subset year 2000\n\ny_2000 = africaData[ which(africaData$year==\"2000\"), ]\nsummary(y_2000)\n\n         country        year      infant_mortality life_expectancy\n Algeria     : 1   Min.   :2000   Min.   : 12.30   Min.   :37.60  \n Angola      : 1   1st Qu.:2000   1st Qu.: 60.80   1st Qu.:51.75  \n Benin       : 1   Median :2000   Median : 80.30   Median :54.30  \n Botswana    : 1   Mean   :2000   Mean   : 78.93   Mean   :56.36  \n Burkina Faso: 1   3rd Qu.:2000   3rd Qu.:103.30   3rd Qu.:60.00  \n Burundi     : 1   Max.   :2000   Max.   :143.30   Max.   :75.00  \n (Other)     :45                                                  \n   fertility       population             gdp               continent \n Min.   :1.990   Min.   :    81154   Min.   :2.019e+08   Africa  :51  \n 1st Qu.:4.150   1st Qu.:  2304687   1st Qu.:1.274e+09   Americas: 0  \n Median :5.550   Median :  8799165   Median :3.238e+09   Asia    : 0  \n Mean   :5.156   Mean   : 15659800   Mean   :1.155e+10   Europe  : 0  \n 3rd Qu.:5.960   3rd Qu.: 17391242   3rd Qu.:8.654e+09   Oceania : 0  \n Max.   :7.730   Max.   :122876723   Max.   :1.329e+11                \n                                                                      \n                       region  \n Eastern Africa           :16  \n Western Africa           :16  \n Middle Africa            : 8  \n Northern Africa          : 6  \n Southern Africa          : 5  \n Australia and New Zealand: 0  \n (Other)                  : 0  \n\n\n\n# Plot life expectancy as a function of infant mortality \n\nggplot(infantM_LifeE, aes(x=infant_mortality, y=life_expectancy)) + geom_point()\n\nWarning: Removed 226 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n# Plot life expectancy as a function of infant mortality \n\nggplot(y_2000, aes(x=population, y=life_expectancy)) + geom_point() +scale_x_continuous(trans='log10')\n\n\n\n\n\n# use lm function and fit life expectancy as the outcome and infant mortality as the predictor. Then use the pipulation size as the predictor (only from 2000) save the result from the two fits into two objects (fit1 and fit2) and apply summary to both \n\n#outcome second predictor first \n\nfit1 = lm(life_expectancy~infant_mortality, data=y_2000)\nfit1_table = broom::tidy(fit1)\nprint(fit1_table)\n\n# A tibble: 2 × 5\n  term             estimate std.error statistic  p.value\n  <chr>               <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)        71.3      2.43       29.4  8.91e-33\n2 infant_mortality   -0.189    0.0287     -6.59 2.83e- 8\n\n\n\nfit2 = lm(life_expectancy~population, data=y_2000)\nfit2_table = broom::tidy(fit2)\nprint(fit2_table)\n\n# A tibble: 2 × 5\n  term             estimate    std.error statistic  p.value\n  <chr>               <dbl>        <dbl>     <dbl>    <dbl>\n1 (Intercept) 55.9          1.47            38.1   4.51e-38\n2 population   0.0000000276 0.0000000546     0.505 6.16e- 1"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Deanna Lanier’s website and data analysis portfolio",
    "section": "",
    "text": "Hi There!\n\nWelcome to my website and data analysis portfolio\nHi everyone, I am Deanna Lanier. This website will be used for the Spring 2023 Modern Applied Data Analysis course.\n\nRead more about me on my About Me page above.\nLooking forward to a great semester!"
  }
]